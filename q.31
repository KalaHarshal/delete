# Function to calculate the sum of digits of a number
def sum_of_digits(num):
    return sum(int(digit) for digit in str(num))

# Function to sort numbers by the sum of their digits
def sort_by_digit_sum(numbers):
    # Sort the list using sum_of_digits as the key
    return sorted(numbers, key=sum_of_digits)

# Sample input 1
input1 = [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
# Sample input 2
input2 = [23, 2, 9, 34, 8, 9, 10, 74]

# Output the sorted lists
print("Sorted by digit sum (input1):", sort_by_digit_sum(input1))
print("Sorted by digit sum (input2):", sort_by_digit_sum(input2))





# Open the input file in read mode
with open("poem.txt", "r") as file:
    # Initialize counters
    line_count = 0
    word_count = 0
    char_count = 0
    
    # Process each line in the file
    for line in file:
        line_count += 1                   # Increment line count
        words = line.split()               # Split line into words
        word_count += len(words)           # Add number of words in line
        char_count += len(line)            # Add number of characters in line

# Write the results to output.txt
with open("output.txt", "w") as output_file:
    output_file.write("Number of lines: " + str(line_count) + "\n")
    output_file.write("Number of words: " + str(word_count) + "\n")
    output_file.write("Number of characters: " + str(char_count) + "\n")

print("Calculations written to output.txt successfully.")
